//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace MsDynamicsTest.Currencies {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Currencies_Binding", Namespace="urn:microsoft-dynamics-schemas/page/currencies")]
    public partial class Currencies_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Currencies_Service() {
            this.Url = global::MsDynamicsTest.Properties.Settings.Default.MsDynamicsTest_Currencies_Currencies_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;
        
        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;
        
        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;
        
        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event CreateMultipleCompletedEventHandler CreateMultipleCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:Read", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="Read_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Currencies")]
        public Currencies Read(string Code) {
            object[] results = this.Invoke("Read", new object[] {
                        Code});
            return ((Currencies)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string Code) {
            this.ReadAsync(Code, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string Code, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        Code}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:ReadByRecId", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="ReadByRecId_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Currencies")]
        public Currencies ReadByRecId(string recId) {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                        recId});
            return ((Currencies)(results[0]));
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId) {
            this.ReadByRecIdAsync(recId, null);
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState) {
            if ((this.ReadByRecIdOperationCompleted == null)) {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                        recId}, this.ReadByRecIdOperationCompleted, userState);
        }
        
        private void OnReadByRecIdOperationCompleted(object arg) {
            if ((this.ReadByRecIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:ReadMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="ReadMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Currencies[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] Currencies_Filter[] filter, string bookmarkKey, int setSize) {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize});
            return ((Currencies[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(Currencies_Filter[] filter, string bookmarkKey, int setSize) {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(Currencies_Filter[] filter, string bookmarkKey, int setSize, object userState) {
            if ((this.ReadMultipleOperationCompleted == null)) {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize}, this.ReadMultipleOperationCompleted, userState);
        }
        
        private void OnReadMultipleOperationCompleted(object arg) {
            if ((this.ReadMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:IsUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="IsUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key) {
            object[] results = this.Invoke("IsUpdated", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key) {
            this.IsUpdatedAsync(Key, null);
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState) {
            if ((this.IsUpdatedOperationCompleted == null)) {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                        Key}, this.IsUpdatedOperationCompleted, userState);
        }
        
        private void OnIsUpdatedOperationCompleted(object arg) {
            if ((this.IsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:GetRecIdFromKey", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="GetRecIdFromKey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key) {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key) {
            this.GetRecIdFromKeyAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState) {
            if ((this.GetRecIdFromKeyOperationCompleted == null)) {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                        Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }
        
        private void OnGetRecIdFromKeyOperationCompleted(object arg) {
            if ((this.GetRecIdFromKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:Create", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="Create_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Create(ref Currencies Currencies) {
            object[] results = this.Invoke("Create", new object[] {
                        Currencies});
            Currencies = ((Currencies)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(Currencies Currencies) {
            this.CreateAsync(Currencies, null);
        }
        
        /// <remarks/>
        public void CreateAsync(Currencies Currencies, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        Currencies}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:CreateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="CreateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref Currencies[] Currencies_List) {
            object[] results = this.Invoke("CreateMultiple", new object[] {
                        Currencies_List});
            Currencies_List = ((Currencies[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(Currencies[] Currencies_List) {
            this.CreateMultipleAsync(Currencies_List, null);
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(Currencies[] Currencies_List, object userState) {
            if ((this.CreateMultipleOperationCompleted == null)) {
                this.CreateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMultipleOperationCompleted);
            }
            this.InvokeAsync("CreateMultiple", new object[] {
                        Currencies_List}, this.CreateMultipleOperationCompleted, userState);
        }
        
        private void OnCreateMultipleOperationCompleted(object arg) {
            if ((this.CreateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMultipleCompleted(this, new CreateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:Update", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="Update_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref Currencies Currencies) {
            object[] results = this.Invoke("Update", new object[] {
                        Currencies});
            Currencies = ((Currencies)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(Currencies Currencies) {
            this.UpdateAsync(Currencies, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(Currencies Currencies, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        Currencies}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:UpdateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="UpdateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref Currencies[] Currencies_List) {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                        Currencies_List});
            Currencies_List = ((Currencies[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(Currencies[] Currencies_List) {
            this.UpdateMultipleAsync(Currencies_List, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(Currencies[] Currencies_List, object userState) {
            if ((this.UpdateMultipleOperationCompleted == null)) {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                        Currencies_List}, this.UpdateMultipleOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleOperationCompleted(object arg) {
            if ((this.UpdateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/currencies:Delete", RequestNamespace="urn:microsoft-dynamics-schemas/page/currencies", ResponseElementName="Delete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/currencies", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_Result")]
        public bool Delete(string Key) {
            object[] results = this.Invoke("Delete", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key) {
            this.DeleteAsync(Key, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Key}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/currencies")]
    public partial class Currencies {
        
        private string keyField;
        
        private string codeField;
        
        private string descriptionField;
        
        private bool eMU_CurrencyField;
        
        private bool eMU_CurrencyFieldSpecified;
        
        private string realized_Gains_AccField;
        
        private string realized_Losses_AccField;
        
        private string unrealized_Gains_AccField;
        
        private string unrealized_Losses_AccField;
        
        private string realized_G_L_Gains_AccountField;
        
        private string realized_G_L_Losses_AccountField;
        
        private string residual_Gains_AccountField;
        
        private string residual_Losses_AccountField;
        
        private decimal amount_Rounding_PrecisionField;
        
        private bool amount_Rounding_PrecisionFieldSpecified;
        
        private string amount_Decimal_PlacesField;
        
        private decimal invoice_Rounding_PrecisionField;
        
        private bool invoice_Rounding_PrecisionFieldSpecified;
        
        private Invoice_Rounding_Type invoice_Rounding_TypeField;
        
        private bool invoice_Rounding_TypeFieldSpecified;
        
        private decimal unit_Amount_Rounding_PrecisionField;
        
        private bool unit_Amount_Rounding_PrecisionFieldSpecified;
        
        private string unit_Amount_Decimal_PlacesField;
        
        private decimal appln_Rounding_PrecisionField;
        
        private bool appln_Rounding_PrecisionFieldSpecified;
        
        private string conv_LCY_Rndg_Debit_AccField;
        
        private string conv_LCY_Rndg_Credit_AccField;
        
        private decimal max_VAT_Difference_AllowedField;
        
        private bool max_VAT_Difference_AllowedFieldSpecified;
        
        private VAT_Rounding_Type vAT_Rounding_TypeField;
        
        private bool vAT_Rounding_TypeFieldSpecified;
        
        private System.DateTime last_Date_AdjustedField;
        
        private bool last_Date_AdjustedFieldSpecified;
        
        private System.DateTime last_Date_ModifiedField;
        
        private bool last_Date_ModifiedFieldSpecified;
        
        private decimal payment_Tolerance_PercentField;
        
        private bool payment_Tolerance_PercentFieldSpecified;
        
        private decimal max_Payment_Tolerance_AmountField;
        
        private bool max_Payment_Tolerance_AmountFieldSpecified;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool EMU_Currency {
            get {
                return this.eMU_CurrencyField;
            }
            set {
                this.eMU_CurrencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EMU_CurrencySpecified {
            get {
                return this.eMU_CurrencyFieldSpecified;
            }
            set {
                this.eMU_CurrencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Realized_Gains_Acc {
            get {
                return this.realized_Gains_AccField;
            }
            set {
                this.realized_Gains_AccField = value;
            }
        }
        
        /// <remarks/>
        public string Realized_Losses_Acc {
            get {
                return this.realized_Losses_AccField;
            }
            set {
                this.realized_Losses_AccField = value;
            }
        }
        
        /// <remarks/>
        public string Unrealized_Gains_Acc {
            get {
                return this.unrealized_Gains_AccField;
            }
            set {
                this.unrealized_Gains_AccField = value;
            }
        }
        
        /// <remarks/>
        public string Unrealized_Losses_Acc {
            get {
                return this.unrealized_Losses_AccField;
            }
            set {
                this.unrealized_Losses_AccField = value;
            }
        }
        
        /// <remarks/>
        public string Realized_G_L_Gains_Account {
            get {
                return this.realized_G_L_Gains_AccountField;
            }
            set {
                this.realized_G_L_Gains_AccountField = value;
            }
        }
        
        /// <remarks/>
        public string Realized_G_L_Losses_Account {
            get {
                return this.realized_G_L_Losses_AccountField;
            }
            set {
                this.realized_G_L_Losses_AccountField = value;
            }
        }
        
        /// <remarks/>
        public string Residual_Gains_Account {
            get {
                return this.residual_Gains_AccountField;
            }
            set {
                this.residual_Gains_AccountField = value;
            }
        }
        
        /// <remarks/>
        public string Residual_Losses_Account {
            get {
                return this.residual_Losses_AccountField;
            }
            set {
                this.residual_Losses_AccountField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount_Rounding_Precision {
            get {
                return this.amount_Rounding_PrecisionField;
            }
            set {
                this.amount_Rounding_PrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Amount_Rounding_PrecisionSpecified {
            get {
                return this.amount_Rounding_PrecisionFieldSpecified;
            }
            set {
                this.amount_Rounding_PrecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Amount_Decimal_Places {
            get {
                return this.amount_Decimal_PlacesField;
            }
            set {
                this.amount_Decimal_PlacesField = value;
            }
        }
        
        /// <remarks/>
        public decimal Invoice_Rounding_Precision {
            get {
                return this.invoice_Rounding_PrecisionField;
            }
            set {
                this.invoice_Rounding_PrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Invoice_Rounding_PrecisionSpecified {
            get {
                return this.invoice_Rounding_PrecisionFieldSpecified;
            }
            set {
                this.invoice_Rounding_PrecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Invoice_Rounding_Type Invoice_Rounding_Type {
            get {
                return this.invoice_Rounding_TypeField;
            }
            set {
                this.invoice_Rounding_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Invoice_Rounding_TypeSpecified {
            get {
                return this.invoice_Rounding_TypeFieldSpecified;
            }
            set {
                this.invoice_Rounding_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Unit_Amount_Rounding_Precision {
            get {
                return this.unit_Amount_Rounding_PrecisionField;
            }
            set {
                this.unit_Amount_Rounding_PrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Unit_Amount_Rounding_PrecisionSpecified {
            get {
                return this.unit_Amount_Rounding_PrecisionFieldSpecified;
            }
            set {
                this.unit_Amount_Rounding_PrecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Unit_Amount_Decimal_Places {
            get {
                return this.unit_Amount_Decimal_PlacesField;
            }
            set {
                this.unit_Amount_Decimal_PlacesField = value;
            }
        }
        
        /// <remarks/>
        public decimal Appln_Rounding_Precision {
            get {
                return this.appln_Rounding_PrecisionField;
            }
            set {
                this.appln_Rounding_PrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Appln_Rounding_PrecisionSpecified {
            get {
                return this.appln_Rounding_PrecisionFieldSpecified;
            }
            set {
                this.appln_Rounding_PrecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Conv_LCY_Rndg_Debit_Acc {
            get {
                return this.conv_LCY_Rndg_Debit_AccField;
            }
            set {
                this.conv_LCY_Rndg_Debit_AccField = value;
            }
        }
        
        /// <remarks/>
        public string Conv_LCY_Rndg_Credit_Acc {
            get {
                return this.conv_LCY_Rndg_Credit_AccField;
            }
            set {
                this.conv_LCY_Rndg_Credit_AccField = value;
            }
        }
        
        /// <remarks/>
        public decimal Max_VAT_Difference_Allowed {
            get {
                return this.max_VAT_Difference_AllowedField;
            }
            set {
                this.max_VAT_Difference_AllowedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Max_VAT_Difference_AllowedSpecified {
            get {
                return this.max_VAT_Difference_AllowedFieldSpecified;
            }
            set {
                this.max_VAT_Difference_AllowedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public VAT_Rounding_Type VAT_Rounding_Type {
            get {
                return this.vAT_Rounding_TypeField;
            }
            set {
                this.vAT_Rounding_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VAT_Rounding_TypeSpecified {
            get {
                return this.vAT_Rounding_TypeFieldSpecified;
            }
            set {
                this.vAT_Rounding_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Last_Date_Adjusted {
            get {
                return this.last_Date_AdjustedField;
            }
            set {
                this.last_Date_AdjustedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Last_Date_AdjustedSpecified {
            get {
                return this.last_Date_AdjustedFieldSpecified;
            }
            set {
                this.last_Date_AdjustedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Last_Date_Modified {
            get {
                return this.last_Date_ModifiedField;
            }
            set {
                this.last_Date_ModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Last_Date_ModifiedSpecified {
            get {
                return this.last_Date_ModifiedFieldSpecified;
            }
            set {
                this.last_Date_ModifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Payment_Tolerance_Percent {
            get {
                return this.payment_Tolerance_PercentField;
            }
            set {
                this.payment_Tolerance_PercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Payment_Tolerance_PercentSpecified {
            get {
                return this.payment_Tolerance_PercentFieldSpecified;
            }
            set {
                this.payment_Tolerance_PercentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Max_Payment_Tolerance_Amount {
            get {
                return this.max_Payment_Tolerance_AmountField;
            }
            set {
                this.max_Payment_Tolerance_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Max_Payment_Tolerance_AmountSpecified {
            get {
                return this.max_Payment_Tolerance_AmountFieldSpecified;
            }
            set {
                this.max_Payment_Tolerance_AmountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/currencies")]
    public enum Invoice_Rounding_Type {
        
        /// <remarks/>
        Nearest,
        
        /// <remarks/>
        Up,
        
        /// <remarks/>
        Down,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/currencies")]
    public enum VAT_Rounding_Type {
        
        /// <remarks/>
        Nearest,
        
        /// <remarks/>
        Up,
        
        /// <remarks/>
        Down,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/currencies")]
    public partial class Currencies_Filter {
        
        private Currencies_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        public Currencies_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/currencies")]
    public enum Currencies_Fields {
        
        /// <remarks/>
        Code,
        
        /// <remarks/>
        Description,
        
        /// <remarks/>
        EMU_Currency,
        
        /// <remarks/>
        Realized_Gains_Acc,
        
        /// <remarks/>
        Realized_Losses_Acc,
        
        /// <remarks/>
        Unrealized_Gains_Acc,
        
        /// <remarks/>
        Unrealized_Losses_Acc,
        
        /// <remarks/>
        Realized_G_L_Gains_Account,
        
        /// <remarks/>
        Realized_G_L_Losses_Account,
        
        /// <remarks/>
        Residual_Gains_Account,
        
        /// <remarks/>
        Residual_Losses_Account,
        
        /// <remarks/>
        Amount_Rounding_Precision,
        
        /// <remarks/>
        Amount_Decimal_Places,
        
        /// <remarks/>
        Invoice_Rounding_Precision,
        
        /// <remarks/>
        Invoice_Rounding_Type,
        
        /// <remarks/>
        Unit_Amount_Rounding_Precision,
        
        /// <remarks/>
        Unit_Amount_Decimal_Places,
        
        /// <remarks/>
        Appln_Rounding_Precision,
        
        /// <remarks/>
        Conv_LCY_Rndg_Debit_Acc,
        
        /// <remarks/>
        Conv_LCY_Rndg_Credit_Acc,
        
        /// <remarks/>
        Max_VAT_Difference_Allowed,
        
        /// <remarks/>
        VAT_Rounding_Type,
        
        /// <remarks/>
        Last_Date_Adjusted,
        
        /// <remarks/>
        Last_Date_Modified,
        
        /// <remarks/>
        Payment_Tolerance_Percent,
        
        /// <remarks/>
        Max_Payment_Tolerance_Amount,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currencies Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currencies)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currencies Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currencies)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currencies[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currencies[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currencies Currencies {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currencies)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateMultipleCompletedEventHandler(object sender, CreateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currencies[] Currencies_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currencies[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currencies Currencies {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currencies)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currencies[] Currencies_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currencies[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace MsDynamicsTest.MsNavJobCard {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="JobCard_Binding", Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public partial class JobCard_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public JobCard_Service() {
            this.Url = global::MsDynamicsTest.Properties.Settings.Default.MsDynamicsTest_MsNavJobCard_JobCard_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;
        
        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;
        
        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;
        
        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event CreateMultipleCompletedEventHandler CreateMultipleCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:Read", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="Read_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("JobCard")]
        public JobCard Read(string No) {
            object[] results = this.Invoke("Read", new object[] {
                        No});
            return ((JobCard)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string No) {
            this.ReadAsync(No, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string No, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        No}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:ReadByRecId", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="ReadByRecId_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("JobCard")]
        public JobCard ReadByRecId(string recId) {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                        recId});
            return ((JobCard)(results[0]));
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId) {
            this.ReadByRecIdAsync(recId, null);
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState) {
            if ((this.ReadByRecIdOperationCompleted == null)) {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                        recId}, this.ReadByRecIdOperationCompleted, userState);
        }
        
        private void OnReadByRecIdOperationCompleted(object arg) {
            if ((this.ReadByRecIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:ReadMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="ReadMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public JobCard[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] JobCard_Filter[] filter, string bookmarkKey, int setSize) {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize});
            return ((JobCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(JobCard_Filter[] filter, string bookmarkKey, int setSize) {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(JobCard_Filter[] filter, string bookmarkKey, int setSize, object userState) {
            if ((this.ReadMultipleOperationCompleted == null)) {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize}, this.ReadMultipleOperationCompleted, userState);
        }
        
        private void OnReadMultipleOperationCompleted(object arg) {
            if ((this.ReadMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:IsUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="IsUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key) {
            object[] results = this.Invoke("IsUpdated", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key) {
            this.IsUpdatedAsync(Key, null);
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState) {
            if ((this.IsUpdatedOperationCompleted == null)) {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                        Key}, this.IsUpdatedOperationCompleted, userState);
        }
        
        private void OnIsUpdatedOperationCompleted(object arg) {
            if ((this.IsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:GetRecIdFromKey", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="GetRecIdFromKey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key) {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key) {
            this.GetRecIdFromKeyAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState) {
            if ((this.GetRecIdFromKeyOperationCompleted == null)) {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                        Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }
        
        private void OnGetRecIdFromKeyOperationCompleted(object arg) {
            if ((this.GetRecIdFromKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:Create", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="Create_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Create(ref JobCard JobCard) {
            object[] results = this.Invoke("Create", new object[] {
                        JobCard});
            JobCard = ((JobCard)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(JobCard JobCard) {
            this.CreateAsync(JobCard, null);
        }
        
        /// <remarks/>
        public void CreateAsync(JobCard JobCard, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        JobCard}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:CreateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="CreateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref JobCard[] JobCard_List) {
            object[] results = this.Invoke("CreateMultiple", new object[] {
                        JobCard_List});
            JobCard_List = ((JobCard[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(JobCard[] JobCard_List) {
            this.CreateMultipleAsync(JobCard_List, null);
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(JobCard[] JobCard_List, object userState) {
            if ((this.CreateMultipleOperationCompleted == null)) {
                this.CreateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMultipleOperationCompleted);
            }
            this.InvokeAsync("CreateMultiple", new object[] {
                        JobCard_List}, this.CreateMultipleOperationCompleted, userState);
        }
        
        private void OnCreateMultipleOperationCompleted(object arg) {
            if ((this.CreateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMultipleCompleted(this, new CreateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:Update", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="Update_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref JobCard JobCard) {
            object[] results = this.Invoke("Update", new object[] {
                        JobCard});
            JobCard = ((JobCard)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(JobCard JobCard) {
            this.UpdateAsync(JobCard, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(JobCard JobCard, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        JobCard}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:UpdateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="UpdateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref JobCard[] JobCard_List) {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                        JobCard_List});
            JobCard_List = ((JobCard[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(JobCard[] JobCard_List) {
            this.UpdateMultipleAsync(JobCard_List, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(JobCard[] JobCard_List, object userState) {
            if ((this.UpdateMultipleOperationCompleted == null)) {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                        JobCard_List}, this.UpdateMultipleOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleOperationCompleted(object arg) {
            if ((this.UpdateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/jobcard:Delete", RequestNamespace="urn:microsoft-dynamics-schemas/page/jobcard", ResponseElementName="Delete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/jobcard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_Result")]
        public bool Delete(string Key) {
            object[] results = this.Invoke("Delete", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key) {
            this.DeleteAsync(Key, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Key}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public partial class JobCard {
        
        private string keyField;
        
        private string noField;
        
        private string descriptionField;
        
        private string bill_to_Customer_NoField;
        
        private string bill_to_Contact_NoField;
        
        private string bill_to_NameField;
        
        private string bill_to_AddressField;
        
        private string bill_to_Address_2Field;
        
        private string bill_to_Post_CodeField;
        
        private string bill_to_CityField;
        
        private string bill_to_Country_Region_CodeField;
        
        private string bill_to_ContactField;
        
        private string search_DescriptionField;
        
        private string person_ResponsibleField;
        
        private Blocked blockedField;
        
        private bool blockedFieldSpecified;
        
        private System.DateTime last_Date_ModifiedField;
        
        private bool last_Date_ModifiedFieldSpecified;
        
        private string job_Posting_GroupField;
        
        private WIP_Method wIP_MethodField;
        
        private bool wIP_MethodFieldSpecified;
        
        private Status statusField;
        
        private bool statusFieldSpecified;
        
        private bool allow_Schedule_Contract_LinesField;
        
        private bool allow_Schedule_Contract_LinesFieldSpecified;
        
        private System.DateTime creation_DateField;
        
        private bool creation_DateFieldSpecified;
        
        private System.DateTime starting_DateField;
        
        private bool starting_DateFieldSpecified;
        
        private System.DateTime ending_DateField;
        
        private bool ending_DateFieldSpecified;
        
        private string currency_CodeField;
        
        private string invoice_Currency_CodeField;
        
        private Exch_Calculation_Cost exch_Calculation_CostField;
        
        private bool exch_Calculation_CostFieldSpecified;
        
        private Exch_Calculation_Price exch_Calculation_PriceField;
        
        private bool exch_Calculation_PriceFieldSpecified;
        
        private System.DateTime wIP_Posting_DateField;
        
        private bool wIP_Posting_DateFieldSpecified;
        
        private decimal total_WIP_Sales_AmountField;
        
        private bool total_WIP_Sales_AmountFieldSpecified;
        
        private decimal total_WIP_Cost_AmountField;
        
        private bool total_WIP_Cost_AmountFieldSpecified;
        
        private decimal recog_Sales_AmountField;
        
        private bool recog_Sales_AmountFieldSpecified;
        
        private decimal recog_Costs_AmountField;
        
        private bool recog_Costs_AmountFieldSpecified;
        
        private Calc_WIP_Method_Used calc_WIP_Method_UsedField;
        
        private bool calc_WIP_Method_UsedFieldSpecified;
        
        private bool wIP_Posted_To_G_LField;
        
        private bool wIP_Posted_To_G_LFieldSpecified;
        
        private System.DateTime wIP_G_L_Posting_DateField;
        
        private bool wIP_G_L_Posting_DateFieldSpecified;
        
        private decimal total_WIP_Sales_G_L_AmountField;
        
        private bool total_WIP_Sales_G_L_AmountFieldSpecified;
        
        private decimal total_WIP_Cost_G_L_AmountField;
        
        private bool total_WIP_Cost_G_L_AmountFieldSpecified;
        
        private decimal recog_Sales_G_L_AmountField;
        
        private bool recog_Sales_G_L_AmountFieldSpecified;
        
        private decimal recog_Costs_G_L_AmountField;
        
        private bool recog_Costs_G_L_AmountFieldSpecified;
        
        private Posted_WIP_Method_Used posted_WIP_Method_UsedField;
        
        private bool posted_WIP_Method_UsedFieldSpecified;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Customer_No {
            get {
                return this.bill_to_Customer_NoField;
            }
            set {
                this.bill_to_Customer_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Contact_No {
            get {
                return this.bill_to_Contact_NoField;
            }
            set {
                this.bill_to_Contact_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Name {
            get {
                return this.bill_to_NameField;
            }
            set {
                this.bill_to_NameField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Address {
            get {
                return this.bill_to_AddressField;
            }
            set {
                this.bill_to_AddressField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Address_2 {
            get {
                return this.bill_to_Address_2Field;
            }
            set {
                this.bill_to_Address_2Field = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Post_Code {
            get {
                return this.bill_to_Post_CodeField;
            }
            set {
                this.bill_to_Post_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_City {
            get {
                return this.bill_to_CityField;
            }
            set {
                this.bill_to_CityField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Country_Region_Code {
            get {
                return this.bill_to_Country_Region_CodeField;
            }
            set {
                this.bill_to_Country_Region_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Bill_to_Contact {
            get {
                return this.bill_to_ContactField;
            }
            set {
                this.bill_to_ContactField = value;
            }
        }
        
        /// <remarks/>
        public string Search_Description {
            get {
                return this.search_DescriptionField;
            }
            set {
                this.search_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Person_Responsible {
            get {
                return this.person_ResponsibleField;
            }
            set {
                this.person_ResponsibleField = value;
            }
        }
        
        /// <remarks/>
        public Blocked Blocked {
            get {
                return this.blockedField;
            }
            set {
                this.blockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockedSpecified {
            get {
                return this.blockedFieldSpecified;
            }
            set {
                this.blockedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Last_Date_Modified {
            get {
                return this.last_Date_ModifiedField;
            }
            set {
                this.last_Date_ModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Last_Date_ModifiedSpecified {
            get {
                return this.last_Date_ModifiedFieldSpecified;
            }
            set {
                this.last_Date_ModifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Job_Posting_Group {
            get {
                return this.job_Posting_GroupField;
            }
            set {
                this.job_Posting_GroupField = value;
            }
        }
        
        /// <remarks/>
        public WIP_Method WIP_Method {
            get {
                return this.wIP_MethodField;
            }
            set {
                this.wIP_MethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WIP_MethodSpecified {
            get {
                return this.wIP_MethodFieldSpecified;
            }
            set {
                this.wIP_MethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Allow_Schedule_Contract_Lines {
            get {
                return this.allow_Schedule_Contract_LinesField;
            }
            set {
                this.allow_Schedule_Contract_LinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Allow_Schedule_Contract_LinesSpecified {
            get {
                return this.allow_Schedule_Contract_LinesFieldSpecified;
            }
            set {
                this.allow_Schedule_Contract_LinesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Creation_Date {
            get {
                return this.creation_DateField;
            }
            set {
                this.creation_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Creation_DateSpecified {
            get {
                return this.creation_DateFieldSpecified;
            }
            set {
                this.creation_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Starting_Date {
            get {
                return this.starting_DateField;
            }
            set {
                this.starting_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Starting_DateSpecified {
            get {
                return this.starting_DateFieldSpecified;
            }
            set {
                this.starting_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Ending_Date {
            get {
                return this.ending_DateField;
            }
            set {
                this.ending_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Ending_DateSpecified {
            get {
                return this.ending_DateFieldSpecified;
            }
            set {
                this.ending_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Currency_Code {
            get {
                return this.currency_CodeField;
            }
            set {
                this.currency_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Invoice_Currency_Code {
            get {
                return this.invoice_Currency_CodeField;
            }
            set {
                this.invoice_Currency_CodeField = value;
            }
        }
        
        /// <remarks/>
        public Exch_Calculation_Cost Exch_Calculation_Cost {
            get {
                return this.exch_Calculation_CostField;
            }
            set {
                this.exch_Calculation_CostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Exch_Calculation_CostSpecified {
            get {
                return this.exch_Calculation_CostFieldSpecified;
            }
            set {
                this.exch_Calculation_CostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Exch_Calculation_Price Exch_Calculation_Price {
            get {
                return this.exch_Calculation_PriceField;
            }
            set {
                this.exch_Calculation_PriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Exch_Calculation_PriceSpecified {
            get {
                return this.exch_Calculation_PriceFieldSpecified;
            }
            set {
                this.exch_Calculation_PriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime WIP_Posting_Date {
            get {
                return this.wIP_Posting_DateField;
            }
            set {
                this.wIP_Posting_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WIP_Posting_DateSpecified {
            get {
                return this.wIP_Posting_DateFieldSpecified;
            }
            set {
                this.wIP_Posting_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Total_WIP_Sales_Amount {
            get {
                return this.total_WIP_Sales_AmountField;
            }
            set {
                this.total_WIP_Sales_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Total_WIP_Sales_AmountSpecified {
            get {
                return this.total_WIP_Sales_AmountFieldSpecified;
            }
            set {
                this.total_WIP_Sales_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Total_WIP_Cost_Amount {
            get {
                return this.total_WIP_Cost_AmountField;
            }
            set {
                this.total_WIP_Cost_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Total_WIP_Cost_AmountSpecified {
            get {
                return this.total_WIP_Cost_AmountFieldSpecified;
            }
            set {
                this.total_WIP_Cost_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Recog_Sales_Amount {
            get {
                return this.recog_Sales_AmountField;
            }
            set {
                this.recog_Sales_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Recog_Sales_AmountSpecified {
            get {
                return this.recog_Sales_AmountFieldSpecified;
            }
            set {
                this.recog_Sales_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Recog_Costs_Amount {
            get {
                return this.recog_Costs_AmountField;
            }
            set {
                this.recog_Costs_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Recog_Costs_AmountSpecified {
            get {
                return this.recog_Costs_AmountFieldSpecified;
            }
            set {
                this.recog_Costs_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Calc_WIP_Method_Used Calc_WIP_Method_Used {
            get {
                return this.calc_WIP_Method_UsedField;
            }
            set {
                this.calc_WIP_Method_UsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Calc_WIP_Method_UsedSpecified {
            get {
                return this.calc_WIP_Method_UsedFieldSpecified;
            }
            set {
                this.calc_WIP_Method_UsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool WIP_Posted_To_G_L {
            get {
                return this.wIP_Posted_To_G_LField;
            }
            set {
                this.wIP_Posted_To_G_LField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WIP_Posted_To_G_LSpecified {
            get {
                return this.wIP_Posted_To_G_LFieldSpecified;
            }
            set {
                this.wIP_Posted_To_G_LFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime WIP_G_L_Posting_Date {
            get {
                return this.wIP_G_L_Posting_DateField;
            }
            set {
                this.wIP_G_L_Posting_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WIP_G_L_Posting_DateSpecified {
            get {
                return this.wIP_G_L_Posting_DateFieldSpecified;
            }
            set {
                this.wIP_G_L_Posting_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Total_WIP_Sales_G_L_Amount {
            get {
                return this.total_WIP_Sales_G_L_AmountField;
            }
            set {
                this.total_WIP_Sales_G_L_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Total_WIP_Sales_G_L_AmountSpecified {
            get {
                return this.total_WIP_Sales_G_L_AmountFieldSpecified;
            }
            set {
                this.total_WIP_Sales_G_L_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Total_WIP_Cost_G_L_Amount {
            get {
                return this.total_WIP_Cost_G_L_AmountField;
            }
            set {
                this.total_WIP_Cost_G_L_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Total_WIP_Cost_G_L_AmountSpecified {
            get {
                return this.total_WIP_Cost_G_L_AmountFieldSpecified;
            }
            set {
                this.total_WIP_Cost_G_L_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Recog_Sales_G_L_Amount {
            get {
                return this.recog_Sales_G_L_AmountField;
            }
            set {
                this.recog_Sales_G_L_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Recog_Sales_G_L_AmountSpecified {
            get {
                return this.recog_Sales_G_L_AmountFieldSpecified;
            }
            set {
                this.recog_Sales_G_L_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Recog_Costs_G_L_Amount {
            get {
                return this.recog_Costs_G_L_AmountField;
            }
            set {
                this.recog_Costs_G_L_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Recog_Costs_G_L_AmountSpecified {
            get {
                return this.recog_Costs_G_L_AmountFieldSpecified;
            }
            set {
                this.recog_Costs_G_L_AmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Posted_WIP_Method_Used Posted_WIP_Method_Used {
            get {
                return this.posted_WIP_Method_UsedField;
            }
            set {
                this.posted_WIP_Method_UsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Posted_WIP_Method_UsedSpecified {
            get {
                return this.posted_WIP_Method_UsedFieldSpecified;
            }
            set {
                this.posted_WIP_Method_UsedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum Blocked {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Posting,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum WIP_Method {
        
        /// <remarks/>
        Cost_Value,
        
        /// <remarks/>
        Sales_Value,
        
        /// <remarks/>
        Cost_of_Sales,
        
        /// <remarks/>
        Percentage_of_Completion,
        
        /// <remarks/>
        Completed_Contract,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum Status {
        
        /// <remarks/>
        Planning,
        
        /// <remarks/>
        Quote,
        
        /// <remarks/>
        Order,
        
        /// <remarks/>
        Completed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum Exch_Calculation_Cost {
        
        /// <remarks/>
        Fixed_LCY,
        
        /// <remarks/>
        Fixed_FCY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum Exch_Calculation_Price {
        
        /// <remarks/>
        Fixed_FCY,
        
        /// <remarks/>
        Fixed_LCY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum Calc_WIP_Method_Used {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Cost_Value,
        
        /// <remarks/>
        Sales_Value,
        
        /// <remarks/>
        Cost_of_Sales,
        
        /// <remarks/>
        Percentage_of_Completion,
        
        /// <remarks/>
        Completed_Contract,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum Posted_WIP_Method_Used {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Cost_Value,
        
        /// <remarks/>
        Sales_Value,
        
        /// <remarks/>
        Cost_of_Sales,
        
        /// <remarks/>
        Percentage_of_Completion,
        
        /// <remarks/>
        Completed_Contract,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public partial class JobCard_Filter {
        
        private JobCard_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        public JobCard_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/jobcard")]
    public enum JobCard_Fields {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Description,
        
        /// <remarks/>
        Bill_to_Customer_No,
        
        /// <remarks/>
        Bill_to_Contact_No,
        
        /// <remarks/>
        Bill_to_Name,
        
        /// <remarks/>
        Bill_to_Address,
        
        /// <remarks/>
        Bill_to_Address_2,
        
        /// <remarks/>
        Bill_to_Post_Code,
        
        /// <remarks/>
        Bill_to_City,
        
        /// <remarks/>
        Bill_to_Country_Region_Code,
        
        /// <remarks/>
        Bill_to_Contact,
        
        /// <remarks/>
        Search_Description,
        
        /// <remarks/>
        Person_Responsible,
        
        /// <remarks/>
        Blocked,
        
        /// <remarks/>
        Last_Date_Modified,
        
        /// <remarks/>
        Job_Posting_Group,
        
        /// <remarks/>
        WIP_Method,
        
        /// <remarks/>
        Status,
        
        /// <remarks/>
        Allow_Schedule_Contract_Lines,
        
        /// <remarks/>
        Creation_Date,
        
        /// <remarks/>
        Starting_Date,
        
        /// <remarks/>
        Ending_Date,
        
        /// <remarks/>
        Currency_Code,
        
        /// <remarks/>
        Invoice_Currency_Code,
        
        /// <remarks/>
        Exch_Calculation_Cost,
        
        /// <remarks/>
        Exch_Calculation_Price,
        
        /// <remarks/>
        WIP_Posting_Date,
        
        /// <remarks/>
        Total_WIP_Sales_Amount,
        
        /// <remarks/>
        Total_WIP_Cost_Amount,
        
        /// <remarks/>
        Recog_Sales_Amount,
        
        /// <remarks/>
        Recog_Costs_Amount,
        
        /// <remarks/>
        Calc_WIP_Method_Used,
        
        /// <remarks/>
        WIP_Posted_To_G_L,
        
        /// <remarks/>
        WIP_G_L_Posting_Date,
        
        /// <remarks/>
        Total_WIP_Sales_G_L_Amount,
        
        /// <remarks/>
        Total_WIP_Cost_G_L_Amount,
        
        /// <remarks/>
        Recog_Sales_G_L_Amount,
        
        /// <remarks/>
        Recog_Costs_G_L_Amount,
        
        /// <remarks/>
        Posted_WIP_Method_Used,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCard JobCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateMultipleCompletedEventHandler(object sender, CreateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCard[] JobCard_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCard JobCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCard[] JobCard_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591